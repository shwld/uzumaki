input JoinProjectMemberInput {
  id: ID!
  confirmationToken: String!
}

type JoinProjectMemberSuccessResult {
  result: ProjectMember!
}

type JoinProjectMemberTokenIsAlreadyUsedResult {
  result: ProjectMemberInvitation!
}

type JoinProjectMemberTokenIsExpiredResult {
  expiredAt: DateTime!
}

type JoinProjectMemberAlreadyJoinedResult {
  result: ProjectMember!
}

union JoinProjectMemberMutationResult =
    JoinProjectMemberSuccessResult
  | JoinProjectMemberTokenIsAlreadyUsedResult
  | JoinProjectMemberTokenIsExpiredResult
  | JoinProjectMemberAlreadyJoinedResult
  | InvalidArgumentsResult
  | UnauthorizedResult

type Mutation {
  joinProjectMember(
    input: JoinProjectMemberInput!
  ): JoinProjectMemberMutationResult!
}
